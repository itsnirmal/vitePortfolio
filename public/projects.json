[ 
  {
    "id": 1,
    "name": "TickIt",
    "brief": "A dynamic to-do list application with user accounts for saving tasks, developed using vanilla JavaScript, HTML, and CSS",
    "description": {
                      "Motivation": "Originally intended to be a simple static website for a to-do list application, the project evolved into a robust app supporting user accounts to save tasks securely. This evolution was driven by the app's utility in organizing daily tasks which i found effective.\n",
                      "Overview": "TickIt is a user-friendly to-do list application featuring an elegant interface, seamless user authentication (Google Sign-In and local accounts), and persistent task saving. Access the app at https://tickitna.vercel.app/.\n",
                      "Tools Used": [
                        "- HTML, CSS, JavaScript\n- Express.js, MongoDB\n- JWT for authentication\n- Deployment on Vercel, Render\n"
                      ],
                      "Key Features": [
                        "- Task Management: Add, edit, and delete tasks.\n- User Authentication: Secure login and registration using Google OAuth and local accounts.\n- Data Persistence: Save tasks securely for future access.\n- Responsive Design: Works seamlessly across devices.\n"
                      ],
                      "Impacts": "TickIt has helped streamline daily task management by providing a clean, efficient interface. Its evolution from a static to a dynamic app showcases its practicality and potential for real-world use.\n",
                      "Conclusion": "TickIt represents the journey of turning a simple idea into a functional, real-world application. It continues to evolve as a tool for personal productivity."
                  },
    "image": "image2.png",
    "link": "https://github.com/itsnirmal/TickIt"
  },
  {
    "id": 1,
    "name": "FaceGuard",
    "brief": "A real-time facial recognition system that captures, trains, and identifies faces using OpenCV, enabling secure and efficient identification.",
    "description": {
                      "Motivation": "FaceGuard was inspired by the need for a cost-effective and adaptable facial recognition solution for security and identification. Existing systems were often expensive or rigid, motivating me to create an open-source alternative while expanding my knowledge of computer vision and machine learning.\n",
                      "Overview": "FaceGuard is a Python-based program with three key components:\n- Dataset Creation: Captures and organizes user face images via a webcam\n- Face Training: Utilizes the Local Binary Pattern Histogram (LBPH) algorithm for training\n- Face Recognition: Detects and identifies faces in real-time, displaying names and confidence scores.\n",
                      "Tools Used": [
                        "- Python with OpenCV for face detection and recognition, NumPy, and Pillow for image processing.\n- Haar Cascade Classifier for pre-trained face detection.\n- A standard webcam for live input.\n"
                      ],
                      "Key Features": [
                        "- Real-time face detection and recognition.\n- Organized face datasets for easy expansion.\n- Confidence-based identification of known users and imposters.\n"
                      ],
                      "Impacts": "FaceGuard enhances accessibility to facial recognition technology, providing practical use cases like attendance and security systems. It also serves as a learning resource for developers, showcasing how open-source tools can create impactful solutions. Building it significantly deepened my understanding of machine learning and computer vision.\n",
                      "Conclusion": "FaceGuard is a scalable, customizable, and affordable facial recognition system, offering potential for real-world applications and future enhancements like cloud integration or deep learning improvements."
                  },
    "image": "image1.jpg",
    "link": "https://github.com/itsnirmal/Face-Recognition-with-Python-and-OpenCV"
  }
]